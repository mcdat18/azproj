{
	"name": "PL_SQL_to_ADLS_csv",
	"properties": {
		"activities": [
			{
				"name": "L_Get_Tables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CDEV_DB",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FE_Iterate_Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "L_Get_Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('L_Get_Tables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "C_SQL_To_Lake",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM @{item().src_schema}.@{item().src_table}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 2,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_awdb02",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ADLS2_CSV",
									"type": "DatasetReference",
									"parameters": {
										"containerName": {
											"value": "@pipeline().parameters.containerName",
											"type": "Expression"
										},
										"folderName": {
											"value": "@{item().lake_dst_folder}",
											"type": "Expression"
										},
										"dbName": {
											"value": "@{item().src_db}",
											"type": "Expression"
										},
										"schemaName": {
											"value": "@{item().src_schema}",
											"type": "Expression"
										},
										"tableName": {
											"value": "@{item().src_table}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "C_Log_File",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "C_SQL_To_Lake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "SELECT '@{pipeline().DataFactory}' AS datafactory_name,\r\n       '@{pipeline().Pipeline}' AS pipeline_name,\r\n       '@{pipeline().RunId}' AS runid,\r\n       '@{item().src_db}' AS source_db,\r\n       '@{item().src_schema}' AS source_schema,\r\n       '@{item().src_table}' AS source_table,\r\n       '@{item().lake_dst_folder}' AS destination,\r\n       '@{pipeline().TriggerType}' AS triggertype,\r\n       '@{pipeline().TriggerId}' AS triggerid,\r\n       '@{pipeline().TriggerName}' AS triggername,\r\n       '@{pipeline().TriggerTime}' AS triggertime,\r\n       '@{activity('C_SQL_To_Lake').output.rowsCopied}' AS rowscopied,\r\n       '@{activity('C_SQL_To_Lake').output.rowsRead}' AS rowsread,\r\n       '@{activity('C_SQL_To_Lake').output.usedParallelCopies}' AS no_parallelcopies,\r\n       '@{activity('C_SQL_To_Lake').output.copyDuration}' AS copyduration_in_secs,\r\n       '@{activity('C_SQL_To_Lake').output.effectiveIntegrationRuntime}' AS effectiveintegrationruntime,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].source.type}' AS source_type,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].sink.type}' AS sink_type,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].status}' AS execution_status,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].start}' AS copyactivity_start_time,\r\n       '@{utcnow()}' AS copyactivity_end_time,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].detailedDurations.queuingDuration}'  AS copyactivity_queuingduration_in_secs,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].detailedDurations.timeToFirstByte}'  AS copyactivity_timetofirstbyte_in_secs,\r\n       '@{activity('C_SQL_To_Lake').output.executionDetails[0].detailedDurations.transferDuration}' AS copyactivity_transferduration_in_secs",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 2,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_CDEV_DB",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Metadata_CSV",
									"type": "DatasetReference",
									"parameters": {
										"containerName": {
											"value": "@pipeline().parameters.containerName",
											"type": "Expression"
										},
										"folderName": {
											"value": "@{item().lake_dst_folder}",
											"type": "Expression"
										},
										"dbName": {
											"value": "@{item().src_db}",
											"type": "Expression"
										},
										"schemaName": {
											"value": "@{item().src_schema}",
											"type": "Expression"
										},
										"tableName": {
											"value": "@{item().src_table}",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"containerName": {
				"type": "string",
				"defaultValue": "bronze"
			}
		},
		"folder": {
			"name": "SQLDynamicLoad"
		},
		"annotations": []
	}
}